@page "/ListChatsAll/"
@using APIConnectify.NET.Models
@rendermode InteractiveServer
@using System.Net.Http.Json
@using static System.Reflection.Metadata.BlobBuilder
@inject IHttpClientFactory ClientFactory
@inject ListChatsAll ListChatsAl
@inject GroupAdd GroupAd
@inject GroupChats GroupChat
@* @using Newtonsoft.Json
 *@
@inject NavigationManager NavigationManager

<button class="btn btn-primary" @onclick="IncrementCount">Создать группу</button>


@if (users.Group == null)
{

}
else
{
    @foreach (var group in users.Group)
    {
        <div>
            <button @onclick="() => OpenGroupChat(group)">
                @group.GroupName <!-- Отображение имени группы -->
            </button>
        </div>
    }

}

@code {
    [Parameter]

    public Users users { get; set; }
    string url = "https://localhost:7086/api/GroupsControllers";

    HttpClient httpClient = null!;
    private void IncrementCount()
    {
        try
        {

            GroupAd.users = users;
            NavigationManager.NavigateTo($"/GroupAdd/");
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if(users == null)
            {
                if(ListChatsAl == null)
                {

                }
                else
                {
                    users = ListChatsAl.users;
                }


            }
            httpClient = ClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri(url);
            if (users == null)
            {

            }
            else
            {
                await LoadData();
            }
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {
            var us = await httpClient.GetFromJsonAsync<Users>(httpClient.BaseAddress);
            if (us == null)
            {

            }
            else
            {
                users = us;
            }
        }
        catch (Exception)
        {

        }
    }


    void OpenGroupChat(Group groupId)
    {
        try
        {
            GroupChat.users = users;
            GroupChat.group = groupId;

            NavigationManager.NavigateTo($"/GroupChat/");
        }
        catch (Exception)
        {

        }
    }
}
