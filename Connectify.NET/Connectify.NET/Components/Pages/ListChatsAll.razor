@page "/ListChatsAll/"
@using APIConnectify.NET.Models
@rendermode InteractiveServer
@using System.Net.Http.Json
@using static System.Reflection.Metadata.BlobBuilder
@inject IHttpClientFactory ClientFactory
@inject ListChatsAll ListChatsAl
@inject GroupAdd GroupAd
@inject GroupChats GroupChat
@* @using Newtonsoft.Json
 *@
@inject NavigationManager NavigationManager
<style>
    /* Стили для контейнера списка групп чата */
    .group-list-container {
        border: 1px solid #ccc;
        border-radius: 5px;
        overflow-y: auto;
        max-height: 300px;
        margin-bottom: 20px;
        text-align: center; /* Выравнивание по центру */
    }

    /* Стили для списка групп чата */
    .group-list {
        padding: 10px;
    }

    /* Стили для кнопок группы чата и создания группы */
    .group-button, .create-group-button {
        display: block;
        width: 200px; /* Ширина кнопок */
        height: 40px; /* Высота кнопок */
        margin-bottom: 10px; /* Отступ между кнопками */
        padding: 8px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-size: 16px;
        font-weight: bold;
    }

        /* Изменение цвета кнопок при наведении курсора */
        .group-button:hover, .create-group-button:hover {
            background-color: #0056b3;
        }

    /* Стили для выравнивания заголовка "Чаты" и кнопки "Создать группу" */
    .header-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
    }

    h1 {
        margin: 0;
        margin-right: 10px;
    }

</style>
<div class="header-container">
    <h1>Чаты</h1>
    <button class="create-group-button" @onclick="IncrementCount">Создать группу</button>
</div>

<div class="group-list-container">
    @if (users == null || users.Group == null || !users.Group.Any())
    {
        <p>Нет доступных групп чата.</p>
    }
    else
    {
        <div class="group-list">
            @foreach (var group in users.Group)
            {
                <div class="chat-group">
                    <button class="group-button" @onclick="() => OpenGroupChat(group)">
                        @group.GroupName <!-- Отображение имени группы -->
                    </button>
                </div>
            }
        </div>
    }
</div>


@code {

    [Parameter]
    public Users users { get; set; }

    string url = "https://localhost:7086/api/GroupsControllers";

    HttpClient httpClient = null!;
    private void IncrementCount()
    {
        try
        {

            GroupAd.users = users;
            NavigationManager.NavigateTo($"/GroupAdd/");
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if(users == null)
            {
                if(ListChatsAl == null)
                {

                }
                else
                {
                    users = ListChatsAl.users;
                }
            }
            httpClient = ClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri(url);
            if (users == null)
            {

            }
            else
            {
                await LoadData();
                StateHasChanged();

            }
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {
            var us = await httpClient.GetFromJsonAsync<Users>(httpClient.BaseAddress);
            if (us == null)
            {

            }
            else
            {
                users = us;
            }
        }
        catch (Exception)
        {

        }
    }


    void OpenGroupChat(Group groupId)
    {
        try
        {
            GroupChat.users = users;
            GroupChat.group = groupId;

            NavigationManager.NavigateTo($"/GroupChat/");
        }
        catch (Exception)
        {

        }
    }
}
