@page "/ListChatsAll/"
@using APIConnectify.NET.Models
@rendermode InteractiveServer
@using System.Net.Http.Json
@using static System.Reflection.Metadata.BlobBuilder
@inject IHttpClientFactory ClientFactory
@inject ListChatsAll ListChatsAl
@inject GroupAdd GroupAd
@inject GroupChats GroupChat
@* @using Newtonsoft.Json
 *@
@inject NavigationManager NavigationManager
<style>

    .user-info b {
        margin-right: 8px;
        font-weight: bold;
        color: #333;
    }

    .chat-messages {
        max-height: 60vh; /* Максимальная высота области сообщений, соответствующая 60% высоты видимой области */
        overflow-y: auto;
        margin-bottom: 20px;
        padding-right: 10px;
    }
    /* Основные стили */
    .chat-header {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 1px solid #ccc;
        padding-bottom: 10px;
    }

    .chat-title {
        font-size: 24px;
        color: #333;
        margin-right: 20px;
    }

    .another-button {
        background-color: #007bff;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
    }

    .page-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        height: 100vh;
        padding: 10px;
        box-sizing: border-box;
    }

    .chat-container {
        background-color: #ffffff;
        width: 100%;
        max-width: 1000px; /* Максимальная ширина контейнера чата */
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        box-sizing: border-box;
        overflow: hidden; /* Скрытие излишнего содержимого чата за пределами контейнера */
    }
/* 
    .chat-container {
        background-color: #ffffff;
        width: 100%;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        box-sizing: border-box;
        overflow: hidden;
    } */

    /* Стили для списка групп чата */
    .group-list-container {
        /*         border: 1px solid #ccc;
     */ /*         overflow-y: auto;
     */
        margin: 0 auto;
    }

    .group-list {
        padding: 10px;
    }

    /* Стили для кнопок группы чата и создания группы */
    .group-button, .create-group-button {
        display: block;
        height: 40px;
        margin-bottom: 10px;
        padding: 8px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        font-size: 16px;
        font-weight: bold;
        max-width: 200px;
        text-overflow: ellipsis;
    }

        .group-button:hover, .create-group-button:hover {
            background-color: #0056b3;
        }

    /* Стили для заголовка "Чаты" и кнопки "Создать группу" */
    .header-container {
        display: flex;
        align-items: center;
        margin: 0 auto;
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1;
        background-color: #f9f9f9;
        width: 80%;
        padding: 10px 0;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
        margin: 0;
    }

    .chat-message {
        background-color: #f0f0f0;
        border-radius: 8px;
        padding: 12px;
        margin-bottom: 12px;
    }
    /*     /* Стили для группы чата */
    .chat-group {
        border: 1px solid #ddd;
        border-radius: 5px;
        margin-bottom: 10px;
    }

    */
</style>
@* <div class="header-container">
    <h1>Чаты</h1>
    <button class="create-group-button" @onclick="IncrementCount">Создать группу</button>
</div>
 *@
<div class="page-container">
    <div class="chat-container">
        <div class="chat-header">
            <h2 class="chat-title">Чаты</h2>
            <Bottungoback></Bottungoback>
            <button class="another-button" @onclick="IncrementCount">Создать группу</button>
        </div>

        <div class="chat-messages">
            @try
            {
                @if (users == null || users.Group == null || !users.Group.Any())
                {
                    <p>Нет доступных групп чата.</p>
                }
                else
                {
                    <div class="group-list">
                        @foreach (var group in users.Group)
                        {
                            <div class="user-info">
                                <div class="chat-message ">
                                    <!-- Обновленные стили для квадратика -->
                                    <button class="group-button" @onclick="() => OpenGroupChat(group)" style="align-items: center;padding: 5px; margin: 5px; border-radius: 5px;">
                                        @group.GroupName <!-- Отображение имени группы -->
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
            catch (Exception ex)
            {
                <p><em>Ошибка !!</em></p>
            }
        </div>
    </div>
</div>
@* bobreczovm@inbox.ru
 *@

@code {

    [Parameter]
    public Users users { get; set; }

    string url = "https://localhost:7086/api/GroupsControllers";

    HttpClient httpClient = null!;
    private void IncrementCount()
    {
        try
        {

            GroupAd.users = users;
            NavigationManager.NavigateTo($"/GroupAdd/");
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (users == null)
            {
                if (ListChatsAl == null)
                {

                }
                else
                {
                    users = ListChatsAl.users;
                }
            }
            httpClient = ClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri(url);
            if (users == null)
            {

            }
            else
            {
                await LoadData();
                StateHasChanged();

            }
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {
            var us = await httpClient.GetFromJsonAsync<Users>(httpClient.BaseAddress);
            if (us == null)
            {

            }
            else
            {
                users = us;
            }
        }
        catch (Exception)
        {

        }
    }


    void OpenGroupChat(Group groupId)
    {
        try
        {
            GroupChat.users = users;
            GroupChat.group = groupId;

            NavigationManager.NavigateTo($"/GroupChat/");
        }
        catch (Exception)
        {

        }
    }
}
