@page "/GroupChat/{id}"
@using APIConnectify.NET.Models
@rendermode InteractiveServer
@using System.Net.Http.Json
@using static System.Reflection.Metadata.BlobBuilder
@inject IHttpClientFactory ClientFactory
@* @using Newtonsoft.Json
 *@
@inject NavigationManager NavigationManager

@try
{

@*     @if (users == null)
    {
        <p><em>Друзей нет</em></p>
    }
    else
    {


        @foreach (var user in users.)
        {
            <div>
                 <label>@user.FriendId.Username <input type="checkbox" @onchange="@(e => ToggleSelection(user.FriendId))" /></label>
            </div>
        }

    }  *@

}
catch (Exception ex)
{
    <p><em>Ошибка !!</em></p>

}


@code {
    public int id { get; set; }
    string url = "https://localhost:7086/api/GroupsChatsControllers/";
    // Users users { get; set; }//Пользователь который Авторизировался

    HttpClient httpClient = null!;
    List<GroupsChats> groupsChats = new List<GroupsChats>();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            
            httpClient = ClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri(url + id);
            await LoadData();

        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {
            groupsChats = await httpClient.GetFromJsonAsync<List<GroupsChats>>(httpClient.BaseAddress) ;

        }
        catch
        {

        }
    }


}
