@page "/GroupChat/{group},{users}"
@using APIConnectify.NET.Models
@rendermode InteractiveServer
@using System.Net.Http.Json
@using static System.Reflection.Metadata.BlobBuilder
@inject IHttpClientFactory ClientFactory
@* @using Newtonsoft.Json
 *@
@inject NavigationManager NavigationManager

@try
{

    @if (groupsChats == null)
    {
@*         <p><em>Друзей нет</em></p>
 *@


    }
    else
    {
        @if (groupsChats.Count() > 0)
        {
            @foreach (var user in groupsChats)
            {
                <div>
                    <b>@user.Users.Username</b>
                    <p>@user.Messages</p>
                </div>
            }
        }
        else
        {
           
        }
    }

    <input type="text" @bind="Название">
    <button @onclick="SubmitForm">Отправить</button>


}
catch (Exception ex)
{
    <p><em>Ошибка !!</em></p>

}


@code 
{

    public string Название{ get; set; }
    public Group group { get; set; }
    // public int id { get; set; }
    string url = "https://localhost:7086/api/GroupsChatsControllers/";
    Users users { get; set; }//Пользователь который Авторизировался
    HttpClient httpClient = null!;
    List<GroupsChats> groupsChats = new List<GroupsChats>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            httpClient = ClientFactory.CreateClient();
            httpClient.BaseAddress = new Uri(url + group.Id);
            await LoadData();
        }
        catch (Exception ex)
        {
            // Handle exception
            Console.WriteLine("An error occurred: " + ex.Message);
        }
    }

    async Task LoadData()
    {
        try
        {
            groupsChats = await httpClient.GetFromJsonAsync<List<GroupsChats>>(httpClient.BaseAddress) ;
        }
        catch
        {

        }
    }

    private void SubmitForm()
    {
        try
        {
            if(!string.IsNullOrEmpty(Название))
            {
                byte[] bytes = new byte[] { };
                Files fs = new Files(0, bytes);
                GroupsChats groupsChats = new GroupsChats(0, group, Название, fs, users);
            }
        }
        catch(Exception)
        {
            
        }
    }

}
